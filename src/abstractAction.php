<?php
/*
Набор доступных действий ограничивается не только текущим статусом, но еще и ролью
пользователя.

Примеры:
на новое задание могут откликнуться только пользователи с ролью исполнитель.
отменить задание можно только если оно новое, и только если это действие выполняет
его автор.
Так что класс задания должен научиться разрешать все эти условия и показывать
кнопки-действия строго в соответствии со всеми ограничениями.
Начните с небольшого рефакторинга.
В текущей реализации класса все доступные
действия заданы строковыми константами этого класса. Эти константы мы заменим на
объекты классов-действий.
Класс-действие — это простой класс, который отвечает за одно действий. Например, «Отмена».
Как было сказано выше, доступные действия зависят не только от статуса задания, но и от
пользователя, который выполняет это действие.

------------------------------------------------------------------------------------
ЗАДАНИЕ
Добавить главную способность — определение списка доступных действий для текущего
статуса и роли.

Пример: CompleteAction: «Завершить» → «act_complete» → функция, сравнивающая id
исполнителя с id юзера.

Порядок действий
Опишите абстрактный класс-действие.
Этот класс имеет три публичных метода для возврата названия действия,
внутреннего имени действия и для проверки прав.
Каждый класс-действие наследуется от абстрактного базового класса, где все эти три
метода определены абстрактными.
Реализуйте его наследников по общему количеству доступных действий.
В классе задания перепишите метод получения действий для статуса: теперь он должен
возвращать не строку-название действия, а объект класса действия.

Метод проверки прав.

Этот метод принимает
id исполнителя задания,
id заказчика задания
id текущего пользователя.
Метод возвращает true или false в зависимости от доступности выполнения этого действия.

К примеру, действие отмены доступно только если id пользователя и id заказчика совпадают.

Метод получения списка доступных действий класса Task.

Возвращает действия, доступные пользователю и по статусу задания.
Фильтрует(перебирает) действия на доступность текущему пользователю,
вызывая метод списка доступных действий и передавая в него все необходимые идентификаторы.

Примеры:

Задание в статусе «В работе» может иметь действие «Отказаться», но сделать это может только пользователь, чей id совпадает с id исполнителя задания.
Задание в статусе «Новое» можно отменить, но сделать это может только автор задания.
Проверка
=====================================================================================
*/
abstract class AbstractAction {

    public function __construct(int $idUser, string $currentStatusTask) {
        $this->idUser = $idUser;
        $this->currentStatusTask = $currentStatusTask;
    }

    abstract public function getNameAction();
    abstract public function getAlterNameAction();
    abstract public function validateAcccessUser();
}
